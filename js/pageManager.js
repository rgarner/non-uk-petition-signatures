// Generated by CoffeeScript 1.9.3
(function() {
  this.PageManager = (function() {
    function PageManager() {}

    PageManager.createOrReplaceChart = function(petitionData, toShow) {
      if (window._chart) {
        window._chart.replace();
      }
      window._chart = new Chart(petitionData, {
        filter: 'GB',
        toShow: toShow
      });
      return window._chart.draw();
    };

    PageManager.setup = function(petitionUrl) {
      return $.ajax({
        url: petitionUrl,
        dataType: "json",
        error: function(jqXHR, textStatus, errorThrown) {
          return console.log("Couldn't get petition JSON - " + textStatus + ": " + errorThrown);
        },
        success: function(petitionJson) {
          var petitionData;
          petitionData = new PetitionData(petitionJson);
          PageManager.setupTitle(petitionData);
          PageManager.setupSubtitle(petitionData);
          PageManager.setupProgressBar(petitionData);
          PageManager.setupToShowButtons();
          PageManager.setupNonUkSummary(petitionData);
          PageManager.setupCsvDownload(petitionData);
          return PageManager.createOrReplaceChart(petitionData, PageManager.currentToShowValue());
        }
      });
    };

    PageManager.setupSubtitle = function(petitionData) {
      return $('.subtitle .n').text(petitionData.stats().total.toLocaleString('en-GB', {
        minimumFractionDigits: 0
      }));
    };

    PageManager.setupProgressBar = function(petitionData) {
      var stats, wereAre;
      stats = petitionData.stats();
      wereAre = petitionData.state() === 'open' ? 'are' : 'were';
      $('.progress-bar.uk').attr('style', "width: " + (stats.percentage_uk.toFixed(1)) + "%");
      $('.progress-bar.uk span').text((stats.uk_total.toLocaleString('en-GB', {
        minimumFractionDigits: 0
      })) + " (" + (stats.percentage_uk.toFixed(1)) + "%) " + wereAre + " from the UK.");
      $('.progress-bar.non-uk').attr('style', "width: " + (stats.percentage_international.toFixed(1)) + "%");
      $('.progress-bar.non-uk span').text((stats.percentage_international.toFixed(1)) + "% non-UK");
      return $('.were-are').text(wereAre);
    };

    PageManager.setupNonUkSummary = function(petitionData) {
      var stats;
      stats = petitionData.stats();
      $('.non-uk-summary .country-count').text(stats.non_uk_country_count);
      console.log(stats.non_uk_country_count);
      $('.non-uk-summary .slice-n').text(PageManager.currentToShowValue());
      $('.non-uk-summary .n').text("" + (stats.international_total.toLocaleString('en-GB', {
        minimumFractionDigits: 0
      })));
      return $('.non-uk-summary .percent').text((stats.percentage_international.toFixed(1)) + "%");
    };

    PageManager.currentToShowValue = function() {
      return parseInt($('button.to-show.active').attr('data-to-show'));
    };

    PageManager.setupToShowButtons = function(petitionData) {
      return $('button.to-show').click(function(e) {
        var toShow;
        $('button.to-show').removeClass('active');
        toShow = parseInt($(e.currentTarget).addClass('active').attr('data-to-show'));
        PageManager.createOrReplaceChart(window._chart.petitionData, toShow);
        return PageManager.setupNonUkSummary(window._chart.petitionData);
      });
    };

    PageManager.setupTitle = function(petitionData) {
      $('.petition-title').text('');
      $('.petition-title a').remove();
      $('.petition-title').append('<a />');
      $('.petition-title a').text((petitionData.title()) + " ").attr('href', petitionData.url());
      return $('.petition-title').append("<span class='badge " + (petitionData.state()) + "'>" + (petitionData.state().capitalizeFirstLetter()) + "</span>");
    };

    PageManager.download = function(petitionData) {
      var country, csv, encodedUri, i, index, len, row, signaturesByCountry;
      signaturesByCountry = petitionData.signaturesByCountryDescendingCount({
        filter: 'NONE'
      });
      csv = "data:text/csv;charset=utf-8,country_code, country_name, signature_count\n";
      for (index = i = 0, len = signaturesByCountry.length; i < len; index = ++i) {
        country = signaturesByCountry[index];
        row = [country.code, "\"" + country.name + "\"", country.signature_count].join(",");
        csv += row;
        if (index < signaturesByCountry.length) {
          csv += "\n";
        }
      }
      encodedUri = encodeURI(csv);
      return window.open(encodedUri);
    };

    PageManager.setupCsvDownload = function(petitionData) {
      return $('#download').unbind('click').click(function() {
        return PageManager.download(petitionData);
      });
    };

    return PageManager;

  })();

}).call(this);

//# sourceMappingURL=pageManager.js.map
