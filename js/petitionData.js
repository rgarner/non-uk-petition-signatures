// Generated by CoffeeScript 1.9.3
(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  this.PetitionData = (function() {
    var ALL, FILTER, TOP;

    TOP = 25;

    ALL = 1000;

    FILTER = 'GB';

    function PetitionData(petitionJson) {
      this.petitionJson = petitionJson;
      this.maxCountryFrequency = bind(this.maxCountryFrequency, this);
      this.signaturesByCountryDescendingCount = bind(this.signaturesByCountryDescendingCount, this);
      this.stats = bind(this.stats, this);
      this.uk = bind(this.uk, this);
      this.signaturesByConstituencyDescendingCount = bind(this.signaturesByConstituencyDescendingCount, this);
      this.signaturesByCountry = bind(this.signaturesByCountry, this);
      this.state = bind(this.state, this);
      this.url = bind(this.url, this);
      this.title = bind(this.title, this);
    }

    PetitionData.prototype.title = function() {
      return this.petitionJson.data.attributes.action;
    };

    PetitionData.prototype.url = function() {
      return this.petitionJson.links.self.replace('.json', '');
    };

    PetitionData.prototype.state = function() {
      return this.petitionJson.data.attributes.state;
    };

    PetitionData.prototype.signaturesByCountry = function(options) {
      if (options == null) {
        options = {
          filter: FILTER
        };
      }
      return this._signaturesByCountry || (this._signaturesByCountry = this.petitionJson.data.attributes.signatures_by_country.filter(function(country) {
        return country.code !== options.filter;
      }));
    };

    PetitionData.prototype.signaturesByConstituencyDescendingCount = function(options) {
      var descending;
      if (options == null) {
        options = {
          top: ALL
        };
      }
      descending = this.petitionJson.data.attributes.signatures_by_constituency.sort(function(prev, current) {
        if (current.signature_count > prev.signature_count) {
          return 1;
        } else {
          return -1;
        }
      });
      return descending.slice(0, +(options.top - 1) + 1 || 9e9);
    };

    PetitionData.prototype.uk = function() {
      var c, countries;
      countries = this.petitionJson.data.attributes.signatures_by_country;
      return ((function() {
        var i, len, results;
        results = [];
        for (i = 0, len = countries.length; i < len; i++) {
          c = countries[i];
          if (c.code === 'GB') {
            results.push(c);
          }
        }
        return results;
      })())[0];
    };

    PetitionData.prototype.stats = function() {
      var accumulator, international_total, non_uk_country_count, total, uk_constituency_count, uk_total;
      total = this.petitionJson.data.attributes.signature_count;
      non_uk_country_count = this.signaturesByCountry().length;
      uk_constituency_count = this.petitionJson.data.attributes.signatures_by_constituency.length;
      uk_total = this.uk().signature_count;
      accumulator = function(total, c) {
        return total += c.signature_count;
      };
      international_total = this.signaturesByCountry().reduce(accumulator, 0);
      return {
        total: total,
        non_uk_country_count: non_uk_country_count,
        uk_constituency_count: uk_constituency_count,
        uk_total: uk_total,
        international_total: international_total,
        percentage_uk: (uk_total / total) * 100,
        percentage_international: (international_total / total) * 100
      };
    };

    PetitionData.prototype.signaturesByCountryDescendingCount = function(options) {
      var descending;
      if (options == null) {
        options = {
          top: TOP,
          filter: FILTER
        };
      }
      descending = this.signaturesByCountry({
        filter: options.filter
      }).sort(function(prev, current) {
        if (current.signature_count > prev.signature_count) {
          return 1;
        } else {
          return -1;
        }
      });
      return descending.slice(0, +(options.top - 1) + 1 || 9e9);
    };

    PetitionData.prototype.maxCountryFrequency = function() {
      return this.signaturesByCountryDescendingCount()[0].signature_count;
    };

    return PetitionData;

  })();

}).call(this);

//# sourceMappingURL=petitionData.js.map
